package com.mycompany.mailsender.view;

import com.mycompany.mailsender.domain.Recipient;
import com.mycompany.mailsender.service.EmailJpaController;
import com.mycompany.mailsender.service.RecipientJpaController;
import com.mycompany.mailsender.service.exceptions.NonexistentEntityException;
import java.util.Arrays;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author aman
 */
public class RecipientForm extends javax.swing.JFrame {
    
    public static RecipientJpaController recipientJpaController = new RecipientJpaController();

    /**
     * Creates new form EmailList
     */
    public RecipientForm() {
        
        initComponents();
        loadData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addButton = new javax.swing.JToggleButton();
        emailAddress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        recipientTable = new javax.swing.JTable();
        message = new javax.swing.JLabel();
        upateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        homeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addButton.setText("Add");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });

        emailAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAddressActionPerformed(evt);
            }
        });

        recipientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        recipientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recipientTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(recipientTable);
        if (recipientTable.getColumnModel().getColumnCount() > 0) {
            recipientTable.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            recipientTable.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            recipientTable.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            recipientTable.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        upateBtn.setText("Update");
        upateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                upateBtnMouseClicked(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("email:");

        jLabel2.setText("Receipient");

        homeBtn.setText("Home");
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(homeBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(message)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(emailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(addButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(upateBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteBtn))
                            .addComponent(jLabel2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(homeBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(emailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addButton)
                        .addComponent(upateBtn)
                        .addComponent(deleteBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(message)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        // TODO add your handling code here:
        addRecipient();

    }//GEN-LAST:event_addButtonMouseClicked

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked
        // TODO add your handling code here:
        int[] selectedRows = recipientTable.getSelectedRows();
        if (selectedRows.length > 0) {
            if (JOptionPane.showConfirmDialog(this, "Do you really want to delete rows:" + Arrays.toString(selectedRows)) == 0) {
                for (int selectedRow : selectedRows) {
                    Integer id = Integer.parseInt(recipientTable.getValueAt(selectedRow, 0).toString());
                    try {
                        recipientJpaController.destroy(id);
                    } catch (NonexistentEntityException ex) {
                        Logger.getLogger(RecipientForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Please select at least one row:", "Alert", JOptionPane.WARNING_MESSAGE);
        }
        
        message.setText("data deleted");
        loadData();
    }//GEN-LAST:event_deleteBtnMouseClicked

    private void upateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upateBtnMouseClicked
        // TODO add your handling code here:
        int selectedRow = recipientTable.getSelectedRow();
        if (selectedRow != -1) {
            if (JOptionPane.showConfirmDialog(this, "Do you really want to update ") == 0) {
                try {
                    Recipient recipient = recipientJpaController.findRecipient(Integer.parseInt(recipientTable.getValueAt(selectedRow, 0).toString()));
                    recipient.setEmailAddress(emailAddress.getText());
                    recipientJpaController.edit(recipient);
                } catch (Exception ex) {
                    Logger.getLogger(RecipientForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
        emailAddress.setText(null);
        message.setText(" row updated:" + Integer.parseInt(recipientTable.getValueAt(selectedRow, 0).toString()));
        loadData();
        

    }//GEN-LAST:event_upateBtnMouseClicked

    private void recipientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recipientTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = recipientTable.getSelectedRow();
        if (selectedRow != -1) {
            message.setText(" row selected:" + Integer.parseInt(recipientTable.getValueAt(selectedRow, 0).toString()));
            emailAddress.setText(recipientTable.getValueAt(selectedRow, 1).toString());
        }
    }//GEN-LAST:event_recipientTableMouseClicked

    private void emailAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailAddressActionPerformed

    private void homeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMouseClicked
        
        new MainFrame().setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_homeBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecipientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecipientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecipientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecipientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecipientForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton addButton;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField emailAddress;
    private javax.swing.JButton homeBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel message;
    private javax.swing.JTable recipientTable;
    private javax.swing.JButton upateBtn;
    // End of variables declaration//GEN-END:variables

    private void addRecipient() {
        Recipient recipient = new Recipient();
        recipient.setEmailAddress(emailAddress.getText());
        
        recipientJpaController.create(recipient);
        emailAddress.setText(null);
        message.setText("data inserted");
        loadData();
        
    }
    
    private List<Recipient> findAllRecipient() {
        return recipientJpaController.findRecipientEntities();
    }
    
    private void loadData() {
        String[] column = {"id", "email", "description"};
        Object[][] data = (Object[][]) findAllRecipient().stream()
                .map(recipient -> new Object[]{recipient.getId(), recipient.getEmailAddress(), recipient.getDescription(),})
                .toArray(Object[][]::new);
        
        recipientTable.setModel(new javax.swing.table.DefaultTableModel(data, column));
        
    }
    
}
